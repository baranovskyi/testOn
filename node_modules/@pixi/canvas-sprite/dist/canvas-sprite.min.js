/*!
 * @pixi/canvas-sprite - v5.1.3
 * Compiled Mon, 09 Sep 2019 04:51:53 UTC
 *
 * @pixi/canvas-sprite is licensed under the MIT License.
 * http://www.opensource.org/licenses/mit-license
 */
this.PIXI=this.PIXI||{};var _pixi_canvas_sprite=function(t,r,e,o,n){"use strict";var i=new e.Matrix,a=function(t){this.renderer=t};return a.prototype.render=function(t){var n=t._texture,a=this.renderer,s=a.context,l=n._frame.width,h=n._frame.height,d=t.transform.worldTransform,u=0,c=0,p=n.baseTexture.getDrawableSource();if(!(n.orig.width<=0||n.orig.height<=0)&&p&&n.valid){a.setBlendMode(t.blendMode,!0),a.context.globalAlpha=t.worldAlpha;var f=n.baseTexture.scaleMode===r.SCALE_MODES.LINEAR;a.smoothProperty&&a.context[a.smoothProperty]!==f&&(s[a.smoothProperty]=f),n.trim?(u=n.trim.width/2+n.trim.x-t.anchor.x*n.orig.width,c=n.trim.height/2+n.trim.y-t.anchor.y*n.orig.height):(u=(.5-t.anchor.x)*n.orig.width,c=(.5-t.anchor.y)*n.orig.height),n.rotate&&(d.copyTo(i),d=i,e.GroupD8.matrixAppendRotationInv(d,n.rotate,u,c),u=0,c=0),u-=l/2,c-=h/2,t.roundPixels?(a.context.setTransform(d.a,d.b,d.c,d.d,d.tx*a.resolution|0,d.ty*a.resolution|0),u|=0,c|=0):a.context.setTransform(d.a,d.b,d.c,d.d,d.tx*a.resolution,d.ty*a.resolution);var _=n.baseTexture.resolution,x=a._outerBlend;x&&(s.save(),s.beginPath(),s.rect(u*a.resolution,c*a.resolution,l*a.resolution,h*a.resolution),s.clip()),16777215!==t.tint?(t._cachedTint===t.tint&&t._tintedCanvas.tintId===t._texture._updateID||(t._cachedTint=t.tint,t._tintedCanvas=o.CanvasTinter.getTintedCanvas(t,t.tint)),s.drawImage(t._tintedCanvas,0,0,Math.floor(l*_),Math.floor(h*_),Math.floor(u*a.resolution),Math.floor(c*a.resolution),Math.floor(l*a.resolution),Math.floor(h*a.resolution))):s.drawImage(p,n._frame.x*_,n._frame.y*_,Math.floor(l*_),Math.floor(h*_),Math.floor(u*a.resolution),Math.floor(c*a.resolution),Math.floor(l*a.resolution),Math.floor(h*a.resolution)),x&&s.restore(),a.setBlendMode(r.BLEND_MODES.NORMAL)}},a.prototype.destroy=function(){this.renderer=null},n.Sprite.prototype._tintedCanvas=null,n.Sprite.prototype._renderCanvas=function(t){t.plugins.sprite.render(this)},t.CanvasSpriteRenderer=a,t}({},PIXI,PIXI,PIXI,PIXI);Object.assign(this.PIXI,_pixi_canvas_sprite);
//# sourceMappingURL=canvas-sprite.min.js.map
